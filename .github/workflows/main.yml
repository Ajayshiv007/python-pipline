name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest httpx prometheus-fastapi-instrumentator

      - name: Run Tests
        run: pytest .

  deploy:
    needs: test  # Ensure tests pass before deploying
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEYS }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.160.177.14 << 'EOF'
          set -e  # Exit on any command failure

          echo "Checking if Docker is installed..."

          # Check if Docker is installed
          if ! command -v docker &> /dev/null
          then
            echo "Docker not found. Installing..."
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            echo "Docker installed successfully."
          else
            echo "Docker is already installed."
          fi

          # Ensure the 'ubuntu' user has permission to run Docker
          echo "Ensuring 'ubuntu' user has Docker permissions..."
          sudo usermod -aG docker ubuntu
          echo "Docker permissions updated."

          # Restart SSH session for changes to take effect
          echo "Applying Docker group changes..."
          exec sudo su -l ubuntu

          # Ensure the latest image is pulled
          docker pull ajayshiv/fastapi

          # Stop and remove old container if running
          docker stop fastapi-container || true
          docker rm fastapi-container || true

          # Run the new container with Prometheus metrics exposed
          docker run -d --name fastapi-container -p 8080:8000 ajayshiv/fastapi

          # Create Prometheus configuration file
          echo "Creating Prometheus configuration..."
          cat <<EOL > prometheus.yml
          global:
            scrape_interval: 15s

          scrape_configs:
            - job_name: 'fastapi'
              static_configs:
                - targets: ['54.160.177.14:8080']
          EOL

          # Run Prometheus container
          echo "Starting Prometheus..."
          docker run -d --name prometheus -p 9090:9090 -v $(pwd)/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

          # Run Grafana container
          echo "Starting Grafana..."
          docker run -d --name grafana -p 3000:3000 grafana/grafana

          # Wait for Grafana to start
          echo "Waiting for Grafana to start..."
          sleep 10

          # Configure Grafana to use Prometheus as a data source
          echo "Configuring Grafana..."
          curl -X POST -H "Content-Type: application/json" -d '{
            "name": "Prometheus",
            "type": "prometheus",
            "url": "http://54.160.177.14:9090",
            "access": "proxy",
            "basicAuth": false
          }' http://admin:admin@54.160.177.14:3000/api/datasources

          echo "Deployment and monitoring setup complete!"
          EOF